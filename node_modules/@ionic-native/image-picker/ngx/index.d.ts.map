{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nexport interface ImagePickerOptions {\n    /**\n     * max images to be selected, defaults to 15. If this is set to 1, upon selection of a single image, the plugin will return it. (Android only)\n     */\n    maximumImagesCount?: number;\n    /**\n     * Max width to allow images to be\n     */\n    width?: number;\n    /**\n     * Max height to allow images to be\n     */\n    height?: number;\n    /**\n     * Quality of images, defaults to 100\n     */\n    quality?: number;\n    /**\n     * Videos allowed?\n     */\n    allow_video?: boolean;\n    /**\n     * the default is the message of the old plugin impl\n     */\n    title?: string;\n    /**\n     * the old plugin impl didn't have it, so passing null by default\n     */\n    message?: string;\n    /**\n     * Choose the format of the return value.\n     * Defined in ImagePicker.OutputType. Default is FILE_URI.\n     *      FILE_URI : 0,   Return image file URI,\n     *      DATA_URL : 1,   Return image as base64-encoded string\n     */\n    outputType?: number;\n    /**\n     * Disable the iOS popover as seen on iPad\n     */\n    disable_popover?: boolean;\n}\nexport declare enum OutputType {\n    FILE_URL = 0,\n    DATA_URL = 1\n}\n/**\n * @name Image Picker\n * @description\n * Cordova Plugin For Multiple Image Selection\n *\n * Requires Cordova plugin: `cordova-plugin-image-picker`.\n * For more info, please see the https://github.com/Telerik-Verified-Plugins/ImagePicker\n *\n * @usage\n * ```typescript\n * import { ImagePicker } from '@ionic-native/image-picker/ngx';\n *\n *\n * constructor(private imagePicker: ImagePicker) { }\n *\n * ...\n *\n * this.imagePicker.getPictures(options).then((results) => {\n *   for (var i = 0; i < results.length; i++) {\n *       console.log('Image URI: ' + results[i]);\n *   }\n * }, (err) => { });\n *\n * ```\n * @interfaces\n * ImagePickerOptions\n */\nexport declare class ImagePicker extends IonicNativePlugin {\n    /**\n     * Pick pictures from the library.\n     * @param {ImagePickerOptions} options\n     * @returns {Promise<any>} Returns a Promise that resolves the image file URI\n     * otherwise rejects with an error.\n     */\n    getPictures(options: ImagePickerOptions): Promise<any>;\n    /**\n     * Check if we have permission to read images\n     * @returns {Promise<boolean>} Returns a promise that resolves with a boolean that indicates whether we have permission\n     */\n    hasReadPermission(): Promise<boolean>;\n    /**\n     * Request permission to read images\n     * @returns {Promise<any>}\n     */\n    requestReadPermission(): Promise<any>;\n}\n"]}